# fibonacci.py
# 2. Each new term in the Fibonacci sequence
# is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci
# sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# solution 1 using while loop

"""
def fibonacci():
    a = 1
    sum = 1
    evensum = 0

    while(evensum <= 4000000):
        temp = a
        print(sum)
        if sum % 2 == 0:
            evensum += sum
        a = sum
        sum = temp + a

    return evensum

"""
# solution 2 using for loop


"""
def fibonacci(n):
    a = 1
    sum = 1
    evensum = 0

    for i in range(1, n + 1):
        temp = a
        print(sum)
        a = sum
        sum = temp + a
        if sum % 2 == 0:
            evensum += sum
    return evensum
"""

# solution 3 using list


def fibonacci():
    a = [0, 1]
    sum = 0
    lower = 0
    upper = 1

    while(sum <= 4000000):
        a.append(a[lower] + a[upper])
        if a[lower] % 2 == 0:
            sum += a[lower]
        print(a[lower])
        lower += 1
        upper += 1
    return sum


def main():
    # fib_num = input("Enter number of terms:")
    print("<<Sum is>>", fibonacci())
    print("\n\n+++++There are many ways to kill a Dog+++++")
    print(
        "1.No dogs were harmed during the process of thinking\n2.Drink coffee every morning\n3.No Copyright infringement intended")
    print("-Soli Deo Honor et Gloria,Amen bring me to Church-\n\n")
if __name__ == "__main__":
    main()
